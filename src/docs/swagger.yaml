openapi: 3.0.0
info:
  title: Hobit API
  version: 1.0.0
  description: Hobit API 문서

paths:
  /api/v0/all_faqs:
    get:
      tags: [FAQ]
      summary: 모든 FAQ 조회
      description: 전체 FAQ 목록을 조회합니다.
      responses:
        200:
          description: FAQ 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  faqs:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: number, example: 160 }
                        maincategory_ko: { type: string, example: 복수전공 }
                        subcategory_ko: { type: string, example: 졸업 }
                        question_ko:
                          {
                            type: string,
                            example: 컴퓨터학과 복수전공 졸업 요구 조건이 궁금해요,
                          }
                        answer_ko:
                          type: array
                          items:
                            type: object
                            properties:
                              answer:
                                {
                                  type: string,
                                  example: 컴퓨터학과 복수전공 졸업 요건은 전공필수 18학점 + 전공선택 36학점 총 54학점 이수 및 공인외국어 성적 제출입니다.,
                                }
                              url: { type: string, example: info.korea.ac.kr }
                              email:
                                { type: string, example: k0225@korea.ac.kr }
                              phone: { type: string, example: 010-1234-5678 }
                        manager: { type: string, example: admin }
        500:
          description: FAQ 조회 오류

  /api/v0/question:
    post:
      tags: [질문]
      summary: 질문으로 FAQ 검색 (NLU 연동)
      description: 사용자가 입력한 질문으로 관련 FAQ를 검색합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  {
                    type: string,
                    example: 컴퓨터학과 복수전공 졸업 요구 조건이 궁금해요,
                  }
                language: { type: string, enum: [KO, EN], example: KO }
      responses:
        200:
          description: 관련 FAQ 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  faqs:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: number, example: 160 }
                        question_ko:
                          {
                            type: string,
                            example: 컴퓨터학과 복수전공 졸업 요구 조건이 궁금해요,
                          }
                        answer_ko:
                          type: array
                          items:
                            type: object
                            properties:
                              answer:
                                {
                                  type: string,
                                  example: 컴퓨터학과 복수전공 졸업 요건은 전공필수 18학점 + 전공선택 36학점 총 54학점 이수 및 공인외국어 성적 제출입니다.,
                                }
                              url: { type: string, example: info.korea.ac.kr }
                              email:
                                { type: string, example: k0225@korea.ac.kr }
                              phone: { type: string, example: 010-1234-5678 }
                  is_greet: { type: boolean, example: false }
                  is_able: { type: boolean, example: false }
                  id: { type: number, example: 99 }
        400:
          description: 필수 입력값 누락
        500:
          description: 질문 처리 오류

  /api/v0/top_faqs:
    get:
      tags: [FAQ]
      summary: 인기 FAQ 조회
      description: 가장 많이 사용된 FAQ를 조회합니다.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 5
      responses:
        200:
          description: 인기 FAQ 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  faqs:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: number, example: 160 }
                        maincategory_ko: { type: string, example: 복수전공 }
                        subcategory_ko: { type: string, example: 졸업 }
                        question_ko:
                          {
                            type: string,
                            example: 컴퓨터학과 복수전공 졸업 요구 조건이 궁금해요,
                          }
                        answer_ko:
                          type: array
                          items:
                            type: object
                            properties:
                              answer:
                                {
                                  type: string,
                                  example: 컴퓨터학과 복수전공 졸업 요건은 전공필수 18학점 + 전공선택 36학점 총 54학점 이수 및 공인외국어 성적 제출입니다.,
                                }
                              url: { type: string, example: info.korea.ac.kr }
                              email:
                                { type: string, example: k0225@korea.ac.kr }
                              phone: { type: string, example: 010-1234-5678 }
        500:
          description: FAQ 조회 오류

  /api/v0/senior_faqs:
    get:
      tags: [시니어 FAQ]
      summary: 모든 시니어 FAQ 조회
      description: 전체 시니어 FAQ 목록을 조회합니다.
      responses:
        200:
          description: 시니어 FAQ 목록 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  seniorFaqs:
                    type: array
                    items:
                      type: object
                      properties:
                        id: { type: number, example: 8 }
                        maincategory_ko: { type: string, example: 공간정보 }
                        maincategory_en:
                          { type: string, example: Spatial information }
                        subcategory_ko: { type: string, example: 이과캠퍼스 }
                        subcategory_en:
                          { type: string, example: Science Campus }
                        detailcategory_ko: { type: string, example: 과학도서관 }
                        detailcategory_en:
                          { type: string, example: Science Library }
                        answer_ko:
                          type: array
                          items:
                            type: object
                            properties:
                              title: { type: string, example: 과학도서관 }
                              answer:
                                {
                                  type: string,
                                  example: 1층에는 알파 라운지,
                                  인피니티 라운지 등 자유롭게 공부할 수 있는 시설이 있어.,
                                }
                              url: { type: string, example: '' }
                              map:
                                type: object
                                properties:
                                  latitude: { type: string, example: '' }
                                  longitude: { type: string, example: '' }
                        answer_en:
                          type: array
                          items:
                            type: object
                            properties:
                              title: { type: string, example: Science Library }
                              answer:
                                {
                                  type: string,
                                  example: On the first floor,
                                  you can find the Alpha Lounge and Infinity Lounge.,
                                }
                              url: { type: string, example: '' }
                              map:
                                type: object
                                properties:
                                  latitude: { type: string, example: '' }
                                  longitude: { type: string, example: '' }
                        manager: { type: string, example: '-' }
                        created_by: { type: integer, example: 4 }
                        updated_by: { type: integer, example: 4 }
        500:
          description: 시니어 FAQ 조회 오류

  /api/v0/senior_faq:
    get:
      tags: [시니어 FAQ]
      summary: 시니어 FAQ 단건 조회
      description: ID로 특정 시니어 FAQ를 조회합니다.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            example: 8
      responses:
        200:
          description: 시니어 FAQ 반환
          content:
            application/json:
              schema:
                type: object
                properties:
                  seniorFaq:
                    type: object
                    properties:
                      id: { type: number, example: 8 }
                      question: { type: string, example: 과학도서관 }
                      answer:
                        type: array
                        items:
                          type: object
                          properties:
                            title: { type: string, example: 과학도서관 }
                            answer:
                              {
                                type: string,
                                example: 1층에는 알파 라운지,
                                인피니티 라운지 등 자유롭게 공부할 수 있는 시설이 있어.,
                              }
                            url: { type: string, example: '' }
                            map:
                              type: object
                              properties:
                                latitude: { type: string, example: '' }
                                longitude: { type: string, example: '' }
        500:
          description: 시니어 FAQ 조회 오류
  /api/v0/rate:
    post:
      tags: [평가]
      summary: FAQ 평가
      description: FAQ를 평가하고 피드백을 남깁니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: number, example: 99 }
                faq_id: { type: number, example: 160 }
                user_question:
                  {
                    type: string,
                    example: 컴퓨터학과 복수전공 졸업 요구 조건이 궁금해요,
                  }
                rate: { type: integer, enum: [1, -1, 0], example: -1 }
                language: { type: string, example: ko }
                feedback_reason:
                  {
                    type: string,
                    enum:
                      [
                        unrelated,
                        duplicate,
                        incorrect,
                        insufficient,
                        unclear,
                        other,
                        null,
                      ],
                    example: incorrect,
                  }
                feedback_detail:
                  { type: string, example: 정보가 오래되었습니다. }
      responses:
        200:
          description: 평가 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: { type: number, example: 99 }
                  success: { type: boolean, example: true }
        400:
          description: 필수 입력값 누락
        500:
          description: 평가 저장 오류

  /api/v0/direct_feedback:
    post:
      tags: [피드백]
      summary: 직접 피드백 등록
      description: FAQ와 관계없는 사용자의 직접 피드백을 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feedback_reason:
                  {
                    type: string,
                    enum:
                      [
                        unrelated,
                        duplicate,
                        incorrect,
                        insufficient,
                        unclear,
                        other,
                      ],
                    example: insufficient,
                  }
                feedback_detail: { type: string, example: 정보가 부족합니다. }
                language: { type: string, example: ko }
      responses:
        200:
          description: 피드백 등록 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: { type: boolean, example: true }
        500:
          description: 피드백 저장 오류
